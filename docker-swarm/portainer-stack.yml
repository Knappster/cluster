services:
  agent:
    image: portainer/agent:lts
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    image: portainer/portainer-ce:lts
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - data:/data
    networks:
      - agent-network
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOST}`)
        - traefik.http.routers.portainer.entrypoints=http
        - traefik.http.routers.portainer.middlewares=portainer
        - traefik.http.routers.portainer-https.rule=Host(`${PORTAINER_HOST}`)
        - traefik.http.routers.portainer-https.entrypoints=https
        - traefik.http.routers.portainer-https.service=portainer
        - traefik.http.routers.portainer-https.tls.certresolver=letsencrypt
        - traefik.http.routers.portainer-https.tls=true
        - traefik.http.routers.portainer-https.middlewares=portainer
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        - traefik.http.middlewares.portainer.redirectscheme.scheme=https
        - traefik.http.middlewares.portainer.redirectscheme.permanent=true

networks:
  agent-network:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

volumes:
  data:
